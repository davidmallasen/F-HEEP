// Copyright 2020 ETH Zurich and University of Bologna.
// Solderpad Hardware License, Version 0.51, see LICENSE for details.
// SPDX-License-Identifier: SHL-0.51
// Derived from Occamy: https://github.com/pulp-platform/snitch/blob/master/hw/system/occamy/src/occamy_cfg.hjson
//
// Pads configuration for core-v-mini-mcu. Read by mcu_gen.py.
// 
// The pads contains the list of all the pads available in the design.
// Each pad is defined by its name and can have the following attributes:
//    num: <number> (mandatory) - the number of pads of this type
//    type: <input|output|inout> (mandatory) - the type of the pad
//    num_offset: <number> (optional) - the offset to the first pad of this type (default 0)
//    mapping: <top|right|bottom|left> (optional) - the mapping of the pad in the design. Useful for ASICs (default top)
//    active: <low|high> (optional) - the active level of the pad (default high)
//    driven_manually: <True|False> (optional) - the pad is driven manually (default False)
//    mux: <dict> (optional) - the muxing options for the pad
//    skip_declaration: <True|False> (optional) - skip the declaration of the pad in the top level (default False)
//    keep_internal: <True|False> (optional) - keep the pad internal to the design (default False)
// 
// Add this field at the same level of pads (not inside) if you want to define PADs attributes
//    attributes: {
//        bits: 7:0
//        resval: 0x3
//    },

{

    pads: {

        clk: {
            num: 1,
            type: input
        },
        rst: {
            num: 1,
            active: low,
            driven_manually: True
            type: input
        },
        boot_select: {
            num: 1,
            type: input
        },
        execute_from_flash: {
            num: 1,
            type: input
        },
        jtag_tck: {
            num: 1,
            type: input
        },
        jtag_tms: {
            num: 1,
            type: input
        },
        jtag_trst: {
            num: 1,
            active: low,
            type: input
        },
        jtag_tdi: {
            num: 1,
            type: input
        },
        jtag_tdo: {
            num: 1,
            type: output
        },
        uart_rx: {
            num: 1,
            type: input
        },
        uart_tx: {
            num: 1,
            type: output
        },
        exit_valid: {
            num: 1,
            type: output
        },
        gpio: {
            num: 18,
            num_offset: 0, #first gpio is gpio0
            type: inout
        },
        spi_flash_sck: {
            num: 1,
            type: inout
        },
        spi_flash_cs: {
            num: 2, #carefull, the x-heep uses the CS from the spi pkg, change it
            type: inout
        },
        spi_flash_sd: {
            num: 4,
            type: inout
        },
        spi_sck: {
            num: 1,
            type: inout
        },
        spi_cs: {
            num: 2,
            type: inout
        },
        spi_sd: {
            num: 4,
            type: inout
        },

        pdm2pcm_pdm: {
            num: 1,
            type: inout
            mux: {
                pdm2pcm_pdm: {
                    type: inout
                },
                gpio_18: {
                    type: inout
                }
            }
        },
        pdm2pcm_clk: {
            num: 1,
            type: inout
            mux: {
                pdm2pcm_clk: {
                    type: inout
                },
                gpio_19: {
                    type: inout
                }
            }
        },
        i2s_sck: {
            num: 1,
            type: inout
            mux: {
                i2s_sck: {
                    type: inout
                },
                gpio_20: {
                    type: inout
                }
            }
        },
        i2s_ws: {
            num: 1,
            type: inout
            mux: {
                i2s_ws: {
                    type: inout
                },
                gpio_21: {
                    type: inout
                }
            }
        },
        i2s_sd: {
            num: 1,
            type: inout
            mux: {
                i2s_sd: {
                    type: inout
                },
                gpio_22: {
                    type: inout
                }
           }
        },
        spi2_cs_0: {
            num: 1,
            type: inout
            mux: {
                spi2_cs_0: {
                    type: inout
                },
                gpio_23: {
                    type: inout
                },
            }
        },
        spi2_cs_1: {
            num: 1,
            type: inout
            mux: {
                spi2_cs_1: {
                    type: inout
                },
                gpio_24: {
                    type: inout
                },
            },
        },
        spi2_sck: {
            num: 1,
            type: inout
            mux: {
                spi2_sck: {
                    type: inout
                },
                gpio_25: {
                    type: inout
                },
            }
        },
        spi2_sd_0: {
            num: 1,
            type: inout
            mux: {
                spi2_sd_0: {
                    type: inout
                },
                gpio_26: {
                    type: inout
                },
            }
        },
        spi2_sd_1: {
            num: 1,
            type: inout
            mux: {
                spi2_sd_1: {
                    type: inout
                },
                gpio_27: {
                    type: inout
                },
            }
        },
        spi2_sd_2: {
            num: 1,
            type: inout
            mux: {
                spi2_sd_2: {
                    type: inout
                },
                gpio_28: {
                    type: inout
                },
            }
        },
        spi2_sd_3: {
            num: 1,
            type: inout
            mux: {
                spi2_sd_3: {
                    type: inout
                },
                gpio_29: {
                    type: inout
                },
            }
        },
        i2c_scl: {
            num: 1,
            type: inout
            mux: {
                i2c_scl: {
                    type: inout
                },
                gpio_31: {
                    type: inout
                },
            }
        },
        i2c_sda: {
            num: 1,
            type: inout
            mux: {
                i2c_sda: {
                    type: inout
                },
                gpio_30: {
                    type: inout
                },
            }
        }
    }
}
