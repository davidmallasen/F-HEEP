// Copyright 2022 EPFL
// Solderpad Hardware License, Version 2.1, see LICENSE.md for details.
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1

/*
  this module decrement the value store in a OpenTitan RegTool made register
  It uses the hw2reg d and de signals generated by regtool
*/

module reg_to_counter #(
    parameter int DW = 8,
    parameter logic [DW-1:0] ExpireValue = '0
) (
    input logic clk_i,
    input logic rst_ni,

    input  logic stop_i,
    input  logic start_i,
    output logic done_o,

    output logic [DW-1:0] hw2reg_d_o,
    output logic hw2reg_de_o,

    input logic [DW-1:0] hw2reg_q_i

);

  typedef enum logic [1:0] {
    IDLE,
    COUNT,
    EXPIRE
  } cnt_fsm_state;

  cnt_fsm_state counter_curr_state, counter_next_state;

  always_ff @(posedge clk_i or negedge rst_ni) begin
    if (~rst_ni) begin
      counter_curr_state <= IDLE;
    end else begin
      counter_curr_state <= counter_next_state;
    end
  end


  always_comb begin

    hw2reg_d_o = hw2reg_q_i - 1;
    hw2reg_de_o = 1'b0;
    done_o = 1'b0;
    counter_next_state = counter_curr_state;

    unique case (counter_curr_state)

      IDLE: begin
        hw2reg_de_o = start_i;
        counter_next_state = start_i ? COUNT : IDLE;
      end

      COUNT: begin
        hw2reg_de_o = 1'b1;
        counter_next_state = hw2reg_d_o == ExpireValue ? EXPIRE : COUNT;
      end

      EXPIRE: begin
        done_o = 1'b1;
        counter_next_state = stop_i ? IDLE : EXPIRE;
      end

      default: begin
        counter_next_state = counter_curr_state;
      end

    endcase
  end

endmodule
